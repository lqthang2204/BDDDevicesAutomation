# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: run android test local

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11.2"]
        os: [ 'macos-latest' ]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
#    - uses: actions/checkout@v2 #checkout the code
#    - name: Set up JDK 1.8
#      uses: actions/setup-java@v1
#      with:
#        java-version: 1.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        pip install -r requirements.txt
        npm install -g appium@next
        appium -v
        appium &>/dev/null &
        appium driver install uiautomator2
        npm install appium-uiautomator2-driver
    - name: Install and Run Appium Server
      run: |
        chmod +x ./RunAppiumServer.sh # install and run appium server in the background
        ./RunAppiumServer.sh
    - name: setup android
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 30
        force-avd-creation: false
        emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: true
        script: python project_runner.py run -fd 'features/scenarios/android' -tg '{@scroll_element_android}' -sg QA -ps scenario -pl ANDROID
#    - name: run appium android tests local
#      run: |
#          python project_runner.py run -fd 'features/scenarios/android' -tg '{@scroll_element_android}' -sg QA -ps scenario -pl ANDROID
#    - name: Upload Test Artifacts
#      uses: actions/upload-artifact@v2
#      with:
#        name: test-report
#        path: app/build/reports
